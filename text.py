{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "ae476e20",
   "metadata": {},
   "outputs": [],
   "source": [
    "import streamlit as st\n",
    "\n",
    "from streamlit_jupyter import StreamlitPatcher, tqdm\n",
    "\n",
    "StreamlitPatcher().jupyter()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "b4c61410",
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import numpy as np\n",
    "import warnings\n",
    "warnings.filterwarnings('ignore')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "75926b84",
   "metadata": {},
   "outputs": [],
   "source": [
    "# load chicago.csv data\n",
    "data = pd.read_csv('chicago.csv')"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "a3255cdc",
   "metadata": {},
   "source": [
    "# Memory Optimization"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "e21f8274",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 32062 entries, 0 to 32061\n",
      "Data columns (total 4 columns):\n",
      " #   Column                  Non-Null Count  Dtype \n",
      "---  ------                  --------------  ----- \n",
      " 0   Name                    32062 non-null  object\n",
      " 1   Position Title          32062 non-null  object\n",
      " 2   Department              32062 non-null  object\n",
      " 3   Employee Annual Salary  32062 non-null  object\n",
      "dtypes: object(4)\n",
      "memory usage: 1002.1+ KB\n"
     ]
    }
   ],
   "source": [
    "# check the memory required to store the dataset\n",
    "data.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "2fe68b4a",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 32062 entries, 0 to 32061\n",
      "Data columns (total 4 columns):\n",
      " #   Column                  Non-Null Count  Dtype   \n",
      "---  ------                  --------------  -----   \n",
      " 0   Name                    32062 non-null  object  \n",
      " 1   Position Title          32062 non-null  category\n",
      " 2   Department              32062 non-null  category\n",
      " 3   Employee Annual Salary  32062 non-null  object  \n",
      "dtypes: category(2), object(2)\n",
      "memory usage: 637.2+ KB\n"
     ]
    }
   ],
   "source": [
    "# optimize each column and look at the memory required\n",
    "# Name will be seperated into subunits (first, last)\n",
    "#data['Name'] = data['Name'].astype('category')\n",
    "data['Position Title'] = data['Position Title'].astype('category')\n",
    "data['Department'] = data['Department'].astype('category')\n",
    "#data['Employee Annual Salary'] = data['Employee Annual Salary'].astype('float')\n",
    "data.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "5d410421",
   "metadata": {
    "scrolled": true
   },
   "outputs": [],
   "source": [
    "# Optimize salary column"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "48bb5ff1",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Name</th>\n",
       "      <th>Position Title</th>\n",
       "      <th>Department</th>\n",
       "      <th>Employee Annual Salary</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>AARON,  ELVIA J</td>\n",
       "      <td>WATER RATE TAKER</td>\n",
       "      <td>WATER MGMNT</td>\n",
       "      <td>90744.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>AARON,  JEFFERY M</td>\n",
       "      <td>POLICE OFFICER</td>\n",
       "      <td>POLICE</td>\n",
       "      <td>84450.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>AARON,  KARINA</td>\n",
       "      <td>POLICE OFFICER</td>\n",
       "      <td>POLICE</td>\n",
       "      <td>84450.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>AARON,  KIMBERLEI R</td>\n",
       "      <td>CHIEF CONTRACT EXPEDITER</td>\n",
       "      <td>GENERAL SERVICES</td>\n",
       "      <td>89880.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>ABAD JR,  VICENTE M</td>\n",
       "      <td>CIVIL ENGINEER IV</td>\n",
       "      <td>WATER MGMNT</td>\n",
       "      <td>106836.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                  Name            Position Title        Department  \\\n",
       "0      AARON,  ELVIA J          WATER RATE TAKER       WATER MGMNT   \n",
       "1    AARON,  JEFFERY M            POLICE OFFICER            POLICE   \n",
       "2       AARON,  KARINA            POLICE OFFICER            POLICE   \n",
       "3  AARON,  KIMBERLEI R  CHIEF CONTRACT EXPEDITER  GENERAL SERVICES   \n",
       "4  ABAD JR,  VICENTE M         CIVIL ENGINEER IV       WATER MGMNT   \n",
       "\n",
       "   Employee Annual Salary  \n",
       "0                 90744.0  \n",
       "1                 84450.0  \n",
       "2                 84450.0  \n",
       "3                 89880.0  \n",
       "4                106836.0  "
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data['Employee Annual Salary'] = data['Employee Annual Salary'].str.replace(\"$\", \"\")\n",
    "data['Employee Annual Salary'] = data['Employee Annual Salary'].str.replace(\",\", \"\")\n",
    "data['Employee Annual Salary'] = data['Employee Annual Salary'].astype(float)\n",
    "data.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "c0495e57",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([['AARON,  ELVIA J', 'WATER RATE TAKER', 'WATER MGMNT', 90744.0],\n",
       "       ['AARON,  JEFFERY M', 'POLICE OFFICER', 'POLICE', 84450.0],\n",
       "       ['AARON,  KARINA', 'POLICE OFFICER', 'POLICE', 84450.0],\n",
       "       ...,\n",
       "       ['ZYMANTAS,  MARK E', 'POLICE OFFICER', 'POLICE', 84450.0],\n",
       "       ['ZYRKOWSKI,  CARLO E', 'POLICE OFFICER', 'POLICE', 87384.0],\n",
       "       ['ZYSKOWSKI,  DARIUSZ', 'CHIEF DATA BASE ANALYST', 'DoIT',\n",
       "        113664.0]], dtype=object)"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data.values"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "7aa5d56e",
   "metadata": {},
   "source": [
    "# Position Title and Department columns"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "90ee9a8b",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'Hello World'"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#\"Hello World\".upper()\n",
    "#\"Hello World\".lower()\n",
    "\"hELlo WoRLd\".title()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "40f6796c",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Name</th>\n",
       "      <th>Position Title</th>\n",
       "      <th>Department</th>\n",
       "      <th>Employee Annual Salary</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>AARON,  ELVIA J</td>\n",
       "      <td>WATER RATE TAKER</td>\n",
       "      <td>Water Mgmnt</td>\n",
       "      <td>90744.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>AARON,  JEFFERY M</td>\n",
       "      <td>POLICE OFFICER</td>\n",
       "      <td>Police</td>\n",
       "      <td>84450.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>AARON,  KARINA</td>\n",
       "      <td>POLICE OFFICER</td>\n",
       "      <td>Police</td>\n",
       "      <td>84450.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>AARON,  KIMBERLEI R</td>\n",
       "      <td>CHIEF CONTRACT EXPEDITER</td>\n",
       "      <td>General Services</td>\n",
       "      <td>89880.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>ABAD JR,  VICENTE M</td>\n",
       "      <td>CIVIL ENGINEER IV</td>\n",
       "      <td>Water Mgmnt</td>\n",
       "      <td>106836.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                  Name            Position Title        Department  \\\n",
       "0      AARON,  ELVIA J          WATER RATE TAKER       Water Mgmnt   \n",
       "1    AARON,  JEFFERY M            POLICE OFFICER            Police   \n",
       "2       AARON,  KARINA            POLICE OFFICER            Police   \n",
       "3  AARON,  KIMBERLEI R  CHIEF CONTRACT EXPEDITER  General Services   \n",
       "4  ABAD JR,  VICENTE M         CIVIL ENGINEER IV       Water Mgmnt   \n",
       "\n",
       "   Employee Annual Salary  \n",
       "0                 90744.0  \n",
       "1                 84450.0  \n",
       "2                 84450.0  \n",
       "3                 89880.0  \n",
       "4                106836.0  "
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data['Department'] = data['Department'].str.title()\n",
    "data.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "09f93545",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Name</th>\n",
       "      <th>Position Title</th>\n",
       "      <th>Department</th>\n",
       "      <th>Employee Annual Salary</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>AARON,  ELVIA J</td>\n",
       "      <td>Water Rate Taker</td>\n",
       "      <td>Water Mgmnt</td>\n",
       "      <td>90744.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>AARON,  JEFFERY M</td>\n",
       "      <td>Police Officer</td>\n",
       "      <td>Police</td>\n",
       "      <td>84450.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>AARON,  KARINA</td>\n",
       "      <td>Police Officer</td>\n",
       "      <td>Police</td>\n",
       "      <td>84450.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>AARON,  KIMBERLEI R</td>\n",
       "      <td>Chief Contract Expediter</td>\n",
       "      <td>General Services</td>\n",
       "      <td>89880.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>ABAD JR,  VICENTE M</td>\n",
       "      <td>Civil Engineer Iv</td>\n",
       "      <td>Water Mgmnt</td>\n",
       "      <td>106836.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                  Name            Position Title        Department  \\\n",
       "0      AARON,  ELVIA J          Water Rate Taker       Water Mgmnt   \n",
       "1    AARON,  JEFFERY M            Police Officer            Police   \n",
       "2       AARON,  KARINA            Police Officer            Police   \n",
       "3  AARON,  KIMBERLEI R  Chief Contract Expediter  General Services   \n",
       "4  ABAD JR,  VICENTE M         Civil Engineer Iv       Water Mgmnt   \n",
       "\n",
       "   Employee Annual Salary  \n",
       "0                 90744.0  \n",
       "1                 84450.0  \n",
       "2                 84450.0  \n",
       "3                 89880.0  \n",
       "4                106836.0  "
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data['Position Title'] = data['Position Title'].str.title()\n",
    "data.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "bb3ece8f",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "markdown",
   "id": "697530db",
   "metadata": {},
   "source": [
    "# Name colum\n",
    "\n",
    "First_name, Middle_name, Last_name"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "95bdadd3",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Name</th>\n",
       "      <th>Position Title</th>\n",
       "      <th>Department</th>\n",
       "      <th>Employee Annual Salary</th>\n",
       "      <th>First Name</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>AARON,  ELVIA J</td>\n",
       "      <td>Water Rate Taker</td>\n",
       "      <td>Water Mgmnt</td>\n",
       "      <td>90744.0</td>\n",
       "      <td>Aaron</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>AARON,  JEFFERY M</td>\n",
       "      <td>Police Officer</td>\n",
       "      <td>Police</td>\n",
       "      <td>84450.0</td>\n",
       "      <td>Aaron</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>AARON,  KARINA</td>\n",
       "      <td>Police Officer</td>\n",
       "      <td>Police</td>\n",
       "      <td>84450.0</td>\n",
       "      <td>Aaron</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>AARON,  KIMBERLEI R</td>\n",
       "      <td>Chief Contract Expediter</td>\n",
       "      <td>General Services</td>\n",
       "      <td>89880.0</td>\n",
       "      <td>Aaron</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>ABAD JR,  VICENTE M</td>\n",
       "      <td>Civil Engineer Iv</td>\n",
       "      <td>Water Mgmnt</td>\n",
       "      <td>106836.0</td>\n",
       "      <td>Abad Jr</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                  Name            Position Title        Department  \\\n",
       "0      AARON,  ELVIA J          Water Rate Taker       Water Mgmnt   \n",
       "1    AARON,  JEFFERY M            Police Officer            Police   \n",
       "2       AARON,  KARINA            Police Officer            Police   \n",
       "3  AARON,  KIMBERLEI R  Chief Contract Expediter  General Services   \n",
       "4  ABAD JR,  VICENTE M         Civil Engineer Iv       Water Mgmnt   \n",
       "\n",
       "   Employee Annual Salary First Name  \n",
       "0                 90744.0      Aaron  \n",
       "1                 84450.0      Aaron  \n",
       "2                 84450.0      Aaron  \n",
       "3                 89880.0      Aaron  \n",
       "4                106836.0    Abad Jr  "
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "first_name = data['Name'].str.split(\",\").str.get(0)\n",
    "data['First Name'] = first_name.str.title()\n",
    "data.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "70ea2ce7",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Name</th>\n",
       "      <th>Position Title</th>\n",
       "      <th>Department</th>\n",
       "      <th>Employee Annual Salary</th>\n",
       "      <th>First Name</th>\n",
       "      <th>Last Name</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>AARON,  ELVIA J</td>\n",
       "      <td>Water Rate Taker</td>\n",
       "      <td>Water Mgmnt</td>\n",
       "      <td>90744.0</td>\n",
       "      <td>Aaron</td>\n",
       "      <td>Elvia</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>AARON,  JEFFERY M</td>\n",
       "      <td>Police Officer</td>\n",
       "      <td>Police</td>\n",
       "      <td>84450.0</td>\n",
       "      <td>Aaron</td>\n",
       "      <td>Jeffery</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>AARON,  KARINA</td>\n",
       "      <td>Police Officer</td>\n",
       "      <td>Police</td>\n",
       "      <td>84450.0</td>\n",
       "      <td>Aaron</td>\n",
       "      <td>Karina</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>AARON,  KIMBERLEI R</td>\n",
       "      <td>Chief Contract Expediter</td>\n",
       "      <td>General Services</td>\n",
       "      <td>89880.0</td>\n",
       "      <td>Aaron</td>\n",
       "      <td>Kimberlei</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>ABAD JR,  VICENTE M</td>\n",
       "      <td>Civil Engineer Iv</td>\n",
       "      <td>Water Mgmnt</td>\n",
       "      <td>106836.0</td>\n",
       "      <td>Abad Jr</td>\n",
       "      <td>Vicente</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                  Name            Position Title        Department  \\\n",
       "0      AARON,  ELVIA J          Water Rate Taker       Water Mgmnt   \n",
       "1    AARON,  JEFFERY M            Police Officer            Police   \n",
       "2       AARON,  KARINA            Police Officer            Police   \n",
       "3  AARON,  KIMBERLEI R  Chief Contract Expediter  General Services   \n",
       "4  ABAD JR,  VICENTE M         Civil Engineer Iv       Water Mgmnt   \n",
       "\n",
       "   Employee Annual Salary First Name  Last Name  \n",
       "0                 90744.0      Aaron      Elvia  \n",
       "1                 84450.0      Aaron    Jeffery  \n",
       "2                 84450.0      Aaron     Karina  \n",
       "3                 89880.0      Aaron  Kimberlei  \n",
       "4                106836.0    Abad Jr    Vicente  "
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "last_name = data['Name'].str.split(\",\").str.get(1)\n",
    "data['Last Name'] = last_name.str.split(\" \").str.get(2).str.title()\n",
    "data.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "fa24331c",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Name</th>\n",
       "      <th>Position Title</th>\n",
       "      <th>Department</th>\n",
       "      <th>Employee Annual Salary</th>\n",
       "      <th>First Name</th>\n",
       "      <th>Last Name</th>\n",
       "      <th>Middle Initial</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>AARON,  ELVIA J</td>\n",
       "      <td>Water Rate Taker</td>\n",
       "      <td>Water Mgmnt</td>\n",
       "      <td>90744.0</td>\n",
       "      <td>Aaron</td>\n",
       "      <td>Elvia</td>\n",
       "      <td>J</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>AARON,  JEFFERY M</td>\n",
       "      <td>Police Officer</td>\n",
       "      <td>Police</td>\n",
       "      <td>84450.0</td>\n",
       "      <td>Aaron</td>\n",
       "      <td>Jeffery</td>\n",
       "      <td>M</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>AARON,  KARINA</td>\n",
       "      <td>Police Officer</td>\n",
       "      <td>Police</td>\n",
       "      <td>84450.0</td>\n",
       "      <td>Aaron</td>\n",
       "      <td>Karina</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>AARON,  KIMBERLEI R</td>\n",
       "      <td>Chief Contract Expediter</td>\n",
       "      <td>General Services</td>\n",
       "      <td>89880.0</td>\n",
       "      <td>Aaron</td>\n",
       "      <td>Kimberlei</td>\n",
       "      <td>R</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>ABAD JR,  VICENTE M</td>\n",
       "      <td>Civil Engineer Iv</td>\n",
       "      <td>Water Mgmnt</td>\n",
       "      <td>106836.0</td>\n",
       "      <td>Abad Jr</td>\n",
       "      <td>Vicente</td>\n",
       "      <td>Vicente</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                  Name            Position Title        Department  \\\n",
       "0      AARON,  ELVIA J          Water Rate Taker       Water Mgmnt   \n",
       "1    AARON,  JEFFERY M            Police Officer            Police   \n",
       "2       AARON,  KARINA            Police Officer            Police   \n",
       "3  AARON,  KIMBERLEI R  Chief Contract Expediter  General Services   \n",
       "4  ABAD JR,  VICENTE M         Civil Engineer Iv       Water Mgmnt   \n",
       "\n",
       "   Employee Annual Salary First Name  Last Name Middle Initial  \n",
       "0                 90744.0      Aaron      Elvia              J  \n",
       "1                 84450.0      Aaron    Jeffery              M  \n",
       "2                 84450.0      Aaron     Karina            NaN  \n",
       "3                 89880.0      Aaron  Kimberlei              R  \n",
       "4                106836.0    Abad Jr    Vicente        Vicente  "
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "middle_name = data['Name'].str.split(\" \").str.get(3).str.title()\n",
    "data['Middle Initial'] = middle_name\n",
    "data.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "aff72c44",
   "metadata": {},
   "source": [
    "# Find the average salaries of employees in each department"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "1d12a258",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array(['Water Mgmnt', 'Police', 'General Services', 'City Council',\n",
       "       'Streets & San', 'Oemc', 'Aviation', 'Fire', 'Family & Support',\n",
       "       'Ipra', 'Public Library', 'Business Affairs', 'Transportn',\n",
       "       'Health', \"Mayor'S Office\", 'Law', 'Finance', 'Cultural Affairs',\n",
       "       'Community Development', 'Buildings', 'Animal Contrl',\n",
       "       'City Clerk', 'Board Of Election', 'Inspector Gen', 'Treasurer',\n",
       "       'Disabilities', 'Human Resources', 'Doit', 'Budget & Mgmt',\n",
       "       'Procurement', 'Human Relations', 'Board Of Ethics',\n",
       "       'Police Board', 'Admin Hearng', 'License Appl Comm'], dtype=object)"
      ]
     },
     "execution_count": 14,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data['Department'].unique()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "77f8a271",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Department\n",
       "Police                   12618\n",
       "Fire                      4796\n",
       "Streets & San             2152\n",
       "Oemc                      1982\n",
       "Water Mgmnt               1840\n",
       "Aviation                  1521\n",
       "Transportn                1073\n",
       "Public Library             961\n",
       "General Services           930\n",
       "Family & Support           654\n",
       "Finance                    577\n",
       "Health                     529\n",
       "Law                        414\n",
       "City Council               396\n",
       "Buildings                  262\n",
       "Community Development      208\n",
       "Business Affairs           161\n",
       "Board Of Election          117\n",
       "Doit                       102\n",
       "City Clerk                  94\n",
       "Mayor'S Office              86\n",
       "Procurement                 83\n",
       "Ipra                        82\n",
       "Cultural Affairs            74\n",
       "Human Resources             70\n",
       "Animal Contrl               67\n",
       "Inspector Gen               57\n",
       "Budget & Mgmt               39\n",
       "Admin Hearng                39\n",
       "Disabilities                28\n",
       "Treasurer                   22\n",
       "Human Relations             16\n",
       "Board Of Ethics              9\n",
       "Police Board                 2\n",
       "License Appl Comm            1\n",
       "Name: count, dtype: int64"
      ]
     },
     "execution_count": 15,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data['Department'].value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "36035b17",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Employee Annual Salary</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Department</th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Admin Hearng</th>\n",
       "      <td>76829.85</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Animal Contrl</th>\n",
       "      <td>54977.50</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Aviation</th>\n",
       "      <td>73619.43</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Board Of Election</th>\n",
       "      <td>56175.49</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Board Of Ethics</th>\n",
       "      <td>86697.33</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Budget &amp; Mgmt</th>\n",
       "      <td>91989.23</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Buildings</th>\n",
       "      <td>96313.74</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Business Affairs</th>\n",
       "      <td>77443.59</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>City Clerk</th>\n",
       "      <td>65803.41</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>City Council</th>\n",
       "      <td>57684.47</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Community Development</th>\n",
       "      <td>86107.23</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Cultural Affairs</th>\n",
       "      <td>80413.24</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Disabilities</th>\n",
       "      <td>80710.29</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Doit</th>\n",
       "      <td>96727.29</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Family &amp; Support</th>\n",
       "      <td>40317.05</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Finance</th>\n",
       "      <td>70731.78</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Fire</th>\n",
       "      <td>95700.63</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>General Services</th>\n",
       "      <td>83449.83</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Health</th>\n",
       "      <td>83188.23</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Human Relations</th>\n",
       "      <td>91065.75</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Human Resources</th>\n",
       "      <td>75905.14</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Inspector Gen</th>\n",
       "      <td>82118.95</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Ipra</th>\n",
       "      <td>90064.10</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Law</th>\n",
       "      <td>74695.95</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>License Appl Comm</th>\n",
       "      <td>71292.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Mayor'S Office</th>\n",
       "      <td>87571.50</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Oemc</th>\n",
       "      <td>40977.70</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Police</th>\n",
       "      <td>86610.36</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Police Board</th>\n",
       "      <td>79974.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Procurement</th>\n",
       "      <td>79995.13</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Public Library</th>\n",
       "      <td>56304.77</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Streets &amp; San</th>\n",
       "      <td>68931.50</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Transportn</th>\n",
       "      <td>85093.15</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Treasurer</th>\n",
       "      <td>90526.23</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Water Mgmnt</th>\n",
       "      <td>85566.46</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                       Employee Annual Salary\n",
       "Department                                   \n",
       "Admin Hearng                         76829.85\n",
       "Animal Contrl                        54977.50\n",
       "Aviation                             73619.43\n",
       "Board Of Election                    56175.49\n",
       "Board Of Ethics                      86697.33\n",
       "Budget & Mgmt                        91989.23\n",
       "Buildings                            96313.74\n",
       "Business Affairs                     77443.59\n",
       "City Clerk                           65803.41\n",
       "City Council                         57684.47\n",
       "Community Development                86107.23\n",
       "Cultural Affairs                     80413.24\n",
       "Disabilities                         80710.29\n",
       "Doit                                 96727.29\n",
       "Family & Support                     40317.05\n",
       "Finance                              70731.78\n",
       "Fire                                 95700.63\n",
       "General Services                     83449.83\n",
       "Health                               83188.23\n",
       "Human Relations                      91065.75\n",
       "Human Resources                      75905.14\n",
       "Inspector Gen                        82118.95\n",
       "Ipra                                 90064.10\n",
       "Law                                  74695.95\n",
       "License Appl Comm                    71292.00\n",
       "Mayor'S Office                       87571.50\n",
       "Oemc                                 40977.70\n",
       "Police                               86610.36\n",
       "Police Board                         79974.00\n",
       "Procurement                          79995.13\n",
       "Public Library                       56304.77\n",
       "Streets & San                        68931.50\n",
       "Transportn                           85093.15\n",
       "Treasurer                            90526.23\n",
       "Water Mgmnt                          85566.46"
      ]
     },
     "execution_count": 16,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "round(data.groupby('Department')[['Employee Annual Salary']].mean(), 2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "bebc4ab7",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Dept: Water Mgmnt\n",
      "Avg_salary 85566.46\n",
      "Dept: Police\n",
      "Avg_salary 86610.36\n",
      "Dept: General Services\n",
      "Avg_salary 83449.83\n",
      "Dept: City Council\n",
      "Avg_salary 57684.47\n",
      "Dept: Streets & San\n",
      "Avg_salary 68931.5\n",
      "Dept: Oemc\n",
      "Avg_salary 40977.7\n",
      "Dept: Aviation\n",
      "Avg_salary 73619.43\n",
      "Dept: Fire\n",
      "Avg_salary 95700.63\n",
      "Dept: Family & Support\n",
      "Avg_salary 40317.05\n",
      "Dept: Ipra\n",
      "Avg_salary 90064.1\n",
      "Dept: Public Library\n",
      "Avg_salary 56304.77\n",
      "Dept: Business Affairs\n",
      "Avg_salary 77443.59\n",
      "Dept: Transportn\n",
      "Avg_salary 85093.15\n",
      "Dept: Health\n",
      "Avg_salary 83188.23\n",
      "Dept: Mayor'S Office\n",
      "Avg_salary 87571.5\n",
      "Dept: Law\n",
      "Avg_salary 74695.95\n",
      "Dept: Finance\n",
      "Avg_salary 70731.78\n",
      "Dept: Cultural Affairs\n",
      "Avg_salary 80413.24\n",
      "Dept: Community Development\n",
      "Avg_salary 86107.23\n",
      "Dept: Buildings\n",
      "Avg_salary 96313.74\n",
      "Dept: Animal Contrl\n",
      "Avg_salary 54977.5\n",
      "Dept: City Clerk\n",
      "Avg_salary 65803.41\n",
      "Dept: Board Of Election\n",
      "Avg_salary 56175.49\n",
      "Dept: Inspector Gen\n",
      "Avg_salary 82118.95\n",
      "Dept: Treasurer\n",
      "Avg_salary 90526.23\n",
      "Dept: Disabilities\n",
      "Avg_salary 80710.29\n",
      "Dept: Human Resources\n",
      "Avg_salary 75905.14\n",
      "Dept: Doit\n",
      "Avg_salary 96727.29\n",
      "Dept: Budget & Mgmt\n",
      "Avg_salary 91989.23\n",
      "Dept: Procurement\n",
      "Avg_salary 79995.13\n",
      "Dept: Human Relations\n",
      "Avg_salary 91065.75\n",
      "Dept: Board Of Ethics\n",
      "Avg_salary 86697.33\n",
      "Dept: Police Board\n",
      "Avg_salary 79974.0\n",
      "Dept: Admin Hearng\n",
      "Avg_salary 76829.85\n",
      "Dept: License Appl Comm\n",
      "Avg_salary 71292.0\n"
     ]
    }
   ],
   "source": [
    "average_salary_mask = []\n",
    "\n",
    "for dept in data['Department'].unique():\n",
    "    #print(dept)\n",
    "    mask_dept = data['Department'] == dept\n",
    "    data_mask = data[mask_dept]\n",
    "    print(\"Dept:\", dept)\n",
    "    avg_sal = round(data_mask['Employee Annual Salary'].mean(),2)\n",
    "    print(\"Avg_salary\", avg_sal)\n",
    "    average_salary_mask.append(avg_sal)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "61d879a5",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Department</th>\n",
       "      <th>Average_Salary</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Water Mgmnt</td>\n",
       "      <td>85566.46</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Police</td>\n",
       "      <td>86610.36</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>General Services</td>\n",
       "      <td>83449.83</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>City Council</td>\n",
       "      <td>57684.47</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Streets &amp; San</td>\n",
       "      <td>68931.50</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>Oemc</td>\n",
       "      <td>40977.70</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>Aviation</td>\n",
       "      <td>73619.43</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>Fire</td>\n",
       "      <td>95700.63</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>Family &amp; Support</td>\n",
       "      <td>40317.05</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>Ipra</td>\n",
       "      <td>90064.10</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>Public Library</td>\n",
       "      <td>56304.77</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>Business Affairs</td>\n",
       "      <td>77443.59</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>Transportn</td>\n",
       "      <td>85093.15</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>Health</td>\n",
       "      <td>83188.23</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>Mayor'S Office</td>\n",
       "      <td>87571.50</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>Law</td>\n",
       "      <td>74695.95</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>Finance</td>\n",
       "      <td>70731.78</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>Cultural Affairs</td>\n",
       "      <td>80413.24</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>Community Development</td>\n",
       "      <td>86107.23</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>Buildings</td>\n",
       "      <td>96313.74</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20</th>\n",
       "      <td>Animal Contrl</td>\n",
       "      <td>54977.50</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21</th>\n",
       "      <td>City Clerk</td>\n",
       "      <td>65803.41</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22</th>\n",
       "      <td>Board Of Election</td>\n",
       "      <td>56175.49</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>23</th>\n",
       "      <td>Inspector Gen</td>\n",
       "      <td>82118.95</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>24</th>\n",
       "      <td>Treasurer</td>\n",
       "      <td>90526.23</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25</th>\n",
       "      <td>Disabilities</td>\n",
       "      <td>80710.29</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>26</th>\n",
       "      <td>Human Resources</td>\n",
       "      <td>75905.14</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>27</th>\n",
       "      <td>Doit</td>\n",
       "      <td>96727.29</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>28</th>\n",
       "      <td>Budget &amp; Mgmt</td>\n",
       "      <td>91989.23</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>29</th>\n",
       "      <td>Procurement</td>\n",
       "      <td>79995.13</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>30</th>\n",
       "      <td>Human Relations</td>\n",
       "      <td>91065.75</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>31</th>\n",
       "      <td>Board Of Ethics</td>\n",
       "      <td>86697.33</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>32</th>\n",
       "      <td>Police Board</td>\n",
       "      <td>79974.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>33</th>\n",
       "      <td>Admin Hearng</td>\n",
       "      <td>76829.85</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>34</th>\n",
       "      <td>License Appl Comm</td>\n",
       "      <td>71292.00</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "               Department  Average_Salary\n",
       "0             Water Mgmnt        85566.46\n",
       "1                  Police        86610.36\n",
       "2        General Services        83449.83\n",
       "3            City Council        57684.47\n",
       "4           Streets & San        68931.50\n",
       "5                    Oemc        40977.70\n",
       "6                Aviation        73619.43\n",
       "7                    Fire        95700.63\n",
       "8        Family & Support        40317.05\n",
       "9                    Ipra        90064.10\n",
       "10         Public Library        56304.77\n",
       "11       Business Affairs        77443.59\n",
       "12             Transportn        85093.15\n",
       "13                 Health        83188.23\n",
       "14         Mayor'S Office        87571.50\n",
       "15                    Law        74695.95\n",
       "16                Finance        70731.78\n",
       "17       Cultural Affairs        80413.24\n",
       "18  Community Development        86107.23\n",
       "19              Buildings        96313.74\n",
       "20          Animal Contrl        54977.50\n",
       "21             City Clerk        65803.41\n",
       "22      Board Of Election        56175.49\n",
       "23          Inspector Gen        82118.95\n",
       "24              Treasurer        90526.23\n",
       "25           Disabilities        80710.29\n",
       "26        Human Resources        75905.14\n",
       "27                   Doit        96727.29\n",
       "28          Budget & Mgmt        91989.23\n",
       "29            Procurement        79995.13\n",
       "30        Human Relations        91065.75\n",
       "31        Board Of Ethics        86697.33\n",
       "32           Police Board        79974.00\n",
       "33           Admin Hearng        76829.85\n",
       "34      License Appl Comm        71292.00"
      ]
     },
     "execution_count": 18,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "my_dict_dept = {\"Department\":data['Department'].unique(), \"Average_Salary\":average_salary_mask}\n",
    "dept_salary_mask = pd.DataFrame(my_dict_dept)\n",
    "dept_salary_mask"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "94425455",
   "metadata": {},
   "source": [
    "# Find the top 5 avaerage salaries by position title"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "b0dde007",
   "metadata": {},
   "outputs": [],
   "source": [
    "#dept_salary_mask.sort_values(by='Average_Salary', ascending=False).head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "21d1c6d2",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Name</th>\n",
       "      <th>Position Title</th>\n",
       "      <th>Department</th>\n",
       "      <th>Employee Annual Salary</th>\n",
       "      <th>First Name</th>\n",
       "      <th>Last Name</th>\n",
       "      <th>Middle Initial</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>8184</th>\n",
       "      <td>EVANS,  GINGER S</td>\n",
       "      <td>Commissioner Of Aviation</td>\n",
       "      <td>Aviation</td>\n",
       "      <td>300000.0</td>\n",
       "      <td>Evans</td>\n",
       "      <td>Ginger</td>\n",
       "      <td>S</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7954</th>\n",
       "      <td>EMANUEL,  RAHM</td>\n",
       "      <td>Mayor</td>\n",
       "      <td>Mayor'S Office</td>\n",
       "      <td>216210.0</td>\n",
       "      <td>Emanuel</td>\n",
       "      <td>Rahm</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25532</th>\n",
       "      <td>SANTIAGO,  JOSE A</td>\n",
       "      <td>Fire Commissioner</td>\n",
       "      <td>Fire</td>\n",
       "      <td>202728.0</td>\n",
       "      <td>Santiago</td>\n",
       "      <td>Jose</td>\n",
       "      <td>A</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8924</th>\n",
       "      <td>FORD II,  RICHARD C</td>\n",
       "      <td>First Deputy Fire Commissioner</td>\n",
       "      <td>Fire</td>\n",
       "      <td>197736.0</td>\n",
       "      <td>Ford Ii</td>\n",
       "      <td>Richard</td>\n",
       "      <td>Richard</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8042</th>\n",
       "      <td>ESCALANTE,  JOHN J</td>\n",
       "      <td>First Deputy Superintendent</td>\n",
       "      <td>Police</td>\n",
       "      <td>197724.0</td>\n",
       "      <td>Escalante</td>\n",
       "      <td>John</td>\n",
       "      <td>J</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                      Name                  Position Title      Department  \\\n",
       "8184      EVANS,  GINGER S        Commissioner Of Aviation        Aviation   \n",
       "7954        EMANUEL,  RAHM                           Mayor  Mayor'S Office   \n",
       "25532    SANTIAGO,  JOSE A               Fire Commissioner            Fire   \n",
       "8924   FORD II,  RICHARD C  First Deputy Fire Commissioner            Fire   \n",
       "8042    ESCALANTE,  JOHN J     First Deputy Superintendent          Police   \n",
       "\n",
       "       Employee Annual Salary First Name Last Name Middle Initial  \n",
       "8184                 300000.0      Evans    Ginger              S  \n",
       "7954                 216210.0    Emanuel      Rahm            NaN  \n",
       "25532                202728.0   Santiago      Jose              A  \n",
       "8924                 197736.0    Ford Ii   Richard        Richard  \n",
       "8042                 197724.0  Escalante      John              J  "
      ]
     },
     "execution_count": 20,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#data.groupby('Position Title')[['Employee Annual Salary']].sort_values(by='Average_Salary')\n",
    "#my_dict_pos = {\"Position\":data['Position Title'].unique(), \"Average_Salary\":average_salary_mask}\n",
    "#pos_salary_mask = pd.DataFrame(my_dict_pos)\n",
    "#pos_salary_mask\n",
    "\n",
    "data.sort_values(by=['Employee Annual Salary'], ascending=False).head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "359adb36",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Name</th>\n",
       "      <th>Position Title</th>\n",
       "      <th>Employee Annual Salary</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>8184</th>\n",
       "      <td>EVANS,  GINGER S</td>\n",
       "      <td>Commissioner Of Aviation</td>\n",
       "      <td>300000.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7954</th>\n",
       "      <td>EMANUEL,  RAHM</td>\n",
       "      <td>Mayor</td>\n",
       "      <td>216210.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25532</th>\n",
       "      <td>SANTIAGO,  JOSE A</td>\n",
       "      <td>Fire Commissioner</td>\n",
       "      <td>202728.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8924</th>\n",
       "      <td>FORD II,  RICHARD C</td>\n",
       "      <td>First Deputy Fire Commissioner</td>\n",
       "      <td>197736.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8042</th>\n",
       "      <td>ESCALANTE,  JOHN J</td>\n",
       "      <td>First Deputy Superintendent</td>\n",
       "      <td>197724.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                      Name                  Position Title  \\\n",
       "8184      EVANS,  GINGER S        Commissioner Of Aviation   \n",
       "7954        EMANUEL,  RAHM                           Mayor   \n",
       "25532    SANTIAGO,  JOSE A               Fire Commissioner   \n",
       "8924   FORD II,  RICHARD C  First Deputy Fire Commissioner   \n",
       "8042    ESCALANTE,  JOHN J     First Deputy Superintendent   \n",
       "\n",
       "       Employee Annual Salary  \n",
       "8184                 300000.0  \n",
       "7954                 216210.0  \n",
       "25532                202728.0  \n",
       "8924                 197736.0  \n",
       "8042                 197724.0  "
      ]
     },
     "execution_count": 21,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "top5 = data.loc[:, ['Name', 'Position Title', 'Employee Annual Salary']].sort_values(by=['Employee Annual Salary'], ascending=False).head()\n",
    "top5"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "08fcea4f",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<BarContainer object of 5 artists>"
      ]
     },
     "execution_count": 22,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "import matplotlib.pyplot as plt\n",
    "plt.bar(x = top5['Position Title'], height = top5['Employee Annual Salary'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "1f3fc6e7",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<BarContainer object of 5 artists>"
      ]
     },
     "execution_count": 23,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.barh(y = top5['Position Title'], width = top5['Employee Annual Salary'].loc[::-1])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "id": "decb4cff",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Unnamed: 0</th>\n",
       "      <th>? Summer</th>\n",
       "      <th>01 !</th>\n",
       "      <th>02 !</th>\n",
       "      <th>03 !</th>\n",
       "      <th>Total</th>\n",
       "      <th>? Winter</th>\n",
       "      <th>01 !.1</th>\n",
       "      <th>02 !.1</th>\n",
       "      <th>03 !.1</th>\n",
       "      <th>Total.1</th>\n",
       "      <th>? Games</th>\n",
       "      <th>01 !.2</th>\n",
       "      <th>02 !.2</th>\n",
       "      <th>03 !.2</th>\n",
       "      <th>Combined total</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Afghanistan (AFG)</td>\n",
       "      <td>13</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>13</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Algeria (ALG)</td>\n",
       "      <td>12</td>\n",
       "      <td>5</td>\n",
       "      <td>2</td>\n",
       "      <td>8</td>\n",
       "      <td>15</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>15</td>\n",
       "      <td>5</td>\n",
       "      <td>2</td>\n",
       "      <td>8</td>\n",
       "      <td>15</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Argentina (ARG)</td>\n",
       "      <td>23</td>\n",
       "      <td>18</td>\n",
       "      <td>24</td>\n",
       "      <td>28</td>\n",
       "      <td>70</td>\n",
       "      <td>18</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>41</td>\n",
       "      <td>18</td>\n",
       "      <td>24</td>\n",
       "      <td>28</td>\n",
       "      <td>70</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Armenia (ARM)</td>\n",
       "      <td>5</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>9</td>\n",
       "      <td>12</td>\n",
       "      <td>6</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>11</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>9</td>\n",
       "      <td>12</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Australasia (ANZ) [ANZ]</td>\n",
       "      <td>2</td>\n",
       "      <td>3</td>\n",
       "      <td>4</td>\n",
       "      <td>5</td>\n",
       "      <td>12</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>3</td>\n",
       "      <td>4</td>\n",
       "      <td>5</td>\n",
       "      <td>12</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                Unnamed: 0  ? Summer  01 !  02 !  03 !  Total  ? Winter  \\\n",
       "0        Afghanistan (AFG)        13     0     0     2      2         0   \n",
       "1            Algeria (ALG)        12     5     2     8     15         3   \n",
       "2          Argentina (ARG)        23    18    24    28     70        18   \n",
       "3            Armenia (ARM)         5     1     2     9     12         6   \n",
       "4  Australasia (ANZ) [ANZ]         2     3     4     5     12         0   \n",
       "\n",
       "   01 !.1  02 !.1  03 !.1  Total.1  ? Games  01 !.2  02 !.2  03 !.2  \\\n",
       "0       0       0       0        0       13       0       0       2   \n",
       "1       0       0       0        0       15       5       2       8   \n",
       "2       0       0       0        0       41      18      24      28   \n",
       "3       0       0       0        0       11       1       2       9   \n",
       "4       0       0       0        0        2       3       4       5   \n",
       "\n",
       "   Combined total  \n",
       "0               2  \n",
       "1              15  \n",
       "2              70  \n",
       "3              12  \n",
       "4              12  "
      ]
     },
     "execution_count": 24,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data = pd.read_csv('olympics.csv', header = 1)\n",
    "data.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "id": "7b63cdaf",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Country</th>\n",
       "      <th>Summer</th>\n",
       "      <th>Gold_s</th>\n",
       "      <th>Silver_s</th>\n",
       "      <th>Bronze_s</th>\n",
       "      <th>Total_s</th>\n",
       "      <th>Winter</th>\n",
       "      <th>Gold_w</th>\n",
       "      <th>Silver_w</th>\n",
       "      <th>Bronze_w</th>\n",
       "      <th>Total_w</th>\n",
       "      <th>Total_Games</th>\n",
       "      <th>Gold</th>\n",
       "      <th>Silver</th>\n",
       "      <th>Bronze</th>\n",
       "      <th>Combined total</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Afghanistan (AFG)</td>\n",
       "      <td>13</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>13</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Algeria (ALG)</td>\n",
       "      <td>12</td>\n",
       "      <td>5</td>\n",
       "      <td>2</td>\n",
       "      <td>8</td>\n",
       "      <td>15</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>15</td>\n",
       "      <td>5</td>\n",
       "      <td>2</td>\n",
       "      <td>8</td>\n",
       "      <td>15</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Argentina (ARG)</td>\n",
       "      <td>23</td>\n",
       "      <td>18</td>\n",
       "      <td>24</td>\n",
       "      <td>28</td>\n",
       "      <td>70</td>\n",
       "      <td>18</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>41</td>\n",
       "      <td>18</td>\n",
       "      <td>24</td>\n",
       "      <td>28</td>\n",
       "      <td>70</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Armenia (ARM)</td>\n",
       "      <td>5</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>9</td>\n",
       "      <td>12</td>\n",
       "      <td>6</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>11</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>9</td>\n",
       "      <td>12</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Australasia (ANZ) [ANZ]</td>\n",
       "      <td>2</td>\n",
       "      <td>3</td>\n",
       "      <td>4</td>\n",
       "      <td>5</td>\n",
       "      <td>12</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>3</td>\n",
       "      <td>4</td>\n",
       "      <td>5</td>\n",
       "      <td>12</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>142</th>\n",
       "      <td>Independent Olympic Participants (IOP) [IOP]</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>143</th>\n",
       "      <td>Zambia (ZAM) [ZAM]</td>\n",
       "      <td>12</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>12</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>144</th>\n",
       "      <td>Zimbabwe (ZIM) [ZIM]</td>\n",
       "      <td>12</td>\n",
       "      <td>3</td>\n",
       "      <td>4</td>\n",
       "      <td>1</td>\n",
       "      <td>8</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>13</td>\n",
       "      <td>3</td>\n",
       "      <td>4</td>\n",
       "      <td>1</td>\n",
       "      <td>8</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>145</th>\n",
       "      <td>Mixed team (ZZX) [ZZX]</td>\n",
       "      <td>3</td>\n",
       "      <td>8</td>\n",
       "      <td>5</td>\n",
       "      <td>4</td>\n",
       "      <td>17</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>8</td>\n",
       "      <td>5</td>\n",
       "      <td>4</td>\n",
       "      <td>17</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>146</th>\n",
       "      <td>Totals</td>\n",
       "      <td>27</td>\n",
       "      <td>4809</td>\n",
       "      <td>4775</td>\n",
       "      <td>5130</td>\n",
       "      <td>14714</td>\n",
       "      <td>22</td>\n",
       "      <td>959</td>\n",
       "      <td>958</td>\n",
       "      <td>948</td>\n",
       "      <td>2865</td>\n",
       "      <td>49</td>\n",
       "      <td>5768</td>\n",
       "      <td>5733</td>\n",
       "      <td>6078</td>\n",
       "      <td>17579</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>147 rows × 16 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                                          Country  Summer  Gold_s  Silver_s  \\\n",
       "0                               Afghanistan (AFG)      13       0         0   \n",
       "1                                   Algeria (ALG)      12       5         2   \n",
       "2                                 Argentina (ARG)      23      18        24   \n",
       "3                                   Armenia (ARM)       5       1         2   \n",
       "4                         Australasia (ANZ) [ANZ]       2       3         4   \n",
       "..                                            ...     ...     ...       ...   \n",
       "142  Independent Olympic Participants (IOP) [IOP]       1       0         1   \n",
       "143                            Zambia (ZAM) [ZAM]      12       0         1   \n",
       "144                          Zimbabwe (ZIM) [ZIM]      12       3         4   \n",
       "145                        Mixed team (ZZX) [ZZX]       3       8         5   \n",
       "146                                        Totals      27    4809      4775   \n",
       "\n",
       "     Bronze_s  Total_s  Winter  Gold_w  Silver_w  Bronze_w  Total_w  \\\n",
       "0           2        2       0       0         0         0        0   \n",
       "1           8       15       3       0         0         0        0   \n",
       "2          28       70      18       0         0         0        0   \n",
       "3           9       12       6       0         0         0        0   \n",
       "4           5       12       0       0         0         0        0   \n",
       "..        ...      ...     ...     ...       ...       ...      ...   \n",
       "142         2        3       0       0         0         0        0   \n",
       "143         1        2       0       0         0         0        0   \n",
       "144         1        8       1       0         0         0        0   \n",
       "145         4       17       0       0         0         0        0   \n",
       "146      5130    14714      22     959       958       948     2865   \n",
       "\n",
       "     Total_Games  Gold  Silver  Bronze  Combined total  \n",
       "0             13     0       0       2               2  \n",
       "1             15     5       2       8              15  \n",
       "2             41    18      24      28              70  \n",
       "3             11     1       2       9              12  \n",
       "4              2     3       4       5              12  \n",
       "..           ...   ...     ...     ...             ...  \n",
       "142            1     0       1       2               3  \n",
       "143           12     0       1       1               2  \n",
       "144           13     3       4       1               8  \n",
       "145            3     8       5       4              17  \n",
       "146           49  5768    5733    6078           17579  \n",
       "\n",
       "[147 rows x 16 columns]"
      ]
     },
     "execution_count": 25,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#data.isna().sum()\n",
    "new_col_names = {'Unnamed: 0':'Country', '? Summer':'Summer', '01 !':'Gold_s', '02 !':'Silver_s', '03 !':'Bronze_s',\n",
    "                'Total':'Total_s', '? Winter':'Winter', '01 !.1':'Gold_w', '02 !.1':'Silver_w', '03 !.1':'Bronze_w',\n",
    "                'Total.1':'Total_w', '? Games':'Total_Games', '01 !.2':'Gold', '02 !.2':'Silver', '03 !.2':'Bronze'}\n",
    "\n",
    "data.rename(columns = new_col_names, inplace = True)\n",
    "data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "8ebc9c20",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "4730a3a7",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 63,
   "id": "9ea7ac40",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Employees"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 64,
   "id": "230a3422",
   "metadata": {},
   "outputs": [],
   "source": [
    "import seaborn as sns\n",
    "sns.set_style(\"whitegrid\")\n",
    "import matplotlib as plt"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 65,
   "id": "75d4aece",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "First Name            67\n",
       "Gender               145\n",
       "Start Date             0\n",
       "Last Login Time        0\n",
       "Salary                 0\n",
       "Bonus %                0\n",
       "Senior Management     67\n",
       "Team                  43\n",
       "dtype: int64"
      ]
     },
     "execution_count": 65,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data = pd.read_csv(\"employees.csv\")\n",
    "data.isna().sum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 66,
   "id": "c773f268",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Gender</th>\n",
       "      <th>Start Date</th>\n",
       "      <th>Last Login Time</th>\n",
       "      <th>Salary</th>\n",
       "      <th>Bonus %</th>\n",
       "      <th>Senior Management</th>\n",
       "      <th>Team</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Male</td>\n",
       "      <td>8/6/1993</td>\n",
       "      <td>12:42 PM</td>\n",
       "      <td>97308</td>\n",
       "      <td>6.945</td>\n",
       "      <td>True</td>\n",
       "      <td>Marketing</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Male</td>\n",
       "      <td>3/31/1996</td>\n",
       "      <td>6:53 AM</td>\n",
       "      <td>61933</td>\n",
       "      <td>4.170</td>\n",
       "      <td>True</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Female</td>\n",
       "      <td>4/23/1993</td>\n",
       "      <td>11:17 AM</td>\n",
       "      <td>130590</td>\n",
       "      <td>11.858</td>\n",
       "      <td>False</td>\n",
       "      <td>Finance</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Male</td>\n",
       "      <td>3/4/2005</td>\n",
       "      <td>1:00 PM</td>\n",
       "      <td>138705</td>\n",
       "      <td>9.340</td>\n",
       "      <td>True</td>\n",
       "      <td>Finance</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Male</td>\n",
       "      <td>1/24/1998</td>\n",
       "      <td>4:47 PM</td>\n",
       "      <td>101004</td>\n",
       "      <td>1.389</td>\n",
       "      <td>True</td>\n",
       "      <td>Client Services</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   Gender Start Date Last Login Time  Salary  Bonus % Senior Management  \\\n",
       "0    Male   8/6/1993        12:42 PM   97308    6.945              True   \n",
       "1    Male  3/31/1996         6:53 AM   61933    4.170              True   \n",
       "2  Female  4/23/1993        11:17 AM  130590   11.858             False   \n",
       "3    Male   3/4/2005         1:00 PM  138705    9.340              True   \n",
       "4    Male  1/24/1998         4:47 PM  101004    1.389              True   \n",
       "\n",
       "              Team  \n",
       "0        Marketing  \n",
       "1              NaN  \n",
       "2          Finance  \n",
       "3          Finance  \n",
       "4  Client Services  "
      ]
     },
     "execution_count": 66,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#data.dropna(subset = ['First Name'], axis = 0, inplace = True)\n",
    "data.drop(['First Name'], axis = 1, inplace = True)\n",
    "data.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 84,
   "id": "9223a46d",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 1000 entries, 0 to 999\n",
      "Data columns (total 7 columns):\n",
      " #   Column             Non-Null Count  Dtype  \n",
      "---  ------             --------------  -----  \n",
      " 0   Gender             1000 non-null   object \n",
      " 1   Start Date         1000 non-null   object \n",
      " 2   Last Login Time    1000 non-null   object \n",
      " 3   Salary             1000 non-null   int64  \n",
      " 4   Bonus %            1000 non-null   float64\n",
      " 5   Senior Management  1000 non-null   bool   \n",
      " 6   Team               1000 non-null   object \n",
      "dtypes: bool(1), float64(1), int64(1), object(4)\n",
      "memory usage: 48.0+ KB\n"
     ]
    }
   ],
   "source": [
    "data['Gender'].fillna(method = 'pad', inplace = True)\n",
    "data['Senior Management'].fillna(method = 'pad', inplace = True)\n",
    "data['Team'].fillna(method = 'pad', inplace = True)\n",
    "data.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 85,
   "id": "673558de",
   "metadata": {},
   "outputs": [
    {
     "ename": "KeyError",
     "evalue": "'Salary'",
     "output_type": "error",
     "traceback": [
      "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[1;31mKeyError\u001b[0m                                  Traceback (most recent call last)",
      "\u001b[1;32m~\\AppData\\Local\\Temp\\ipykernel_18116\\1690311273.py\u001b[0m in \u001b[0;36m?\u001b[1;34m()\u001b[0m\n\u001b[0;32m      5\u001b[0m \u001b[1;31m#mask = data['Gender'] == 'Male'\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m      6\u001b[0m \u001b[1;31m#data.mask = data[mask]\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m      7\u001b[0m \u001b[1;31m#data.mask['Bonus %'].mean()\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m      8\u001b[0m \u001b[1;33m\u001b[0m\u001b[0m\n\u001b[1;32m----> 9\u001b[1;33m \u001b[0mtop5\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mdata\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mloc\u001b[0m\u001b[1;33m[\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m,\u001b[0m \u001b[1;33m[\u001b[0m\u001b[1;34m'Gender'\u001b[0m\u001b[1;33m]\u001b[0m\u001b[1;33m]\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0msort_values\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mby\u001b[0m\u001b[1;33m=\u001b[0m\u001b[1;33m[\u001b[0m\u001b[1;34m'Salary'\u001b[0m\u001b[1;33m]\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0mascending\u001b[0m\u001b[1;33m=\u001b[0m\u001b[1;32mFalse\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mhead\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m\u001b[0;32m     10\u001b[0m \u001b[0mtop5\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n",
      "\u001b[1;32mE:\\Programs\\Anaconda\\Lib\\site-packages\\pandas\\core\\frame.py\u001b[0m in \u001b[0;36m?\u001b[1;34m(self, by, axis, ascending, inplace, kind, na_position, ignore_index, key)\u001b[0m\n\u001b[0;32m   6754\u001b[0m         \u001b[1;32melif\u001b[0m \u001b[0mlen\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mby\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m   6755\u001b[0m             \u001b[1;31m# len(by) == 1\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m   6756\u001b[0m \u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m   6757\u001b[0m             \u001b[0mby\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mby\u001b[0m\u001b[1;33m[\u001b[0m\u001b[1;36m0\u001b[0m\u001b[1;33m]\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[1;32m-> 6758\u001b[1;33m             \u001b[0mk\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0m_get_label_or_level_values\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mby\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0maxis\u001b[0m\u001b[1;33m=\u001b[0m\u001b[0maxis\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m\u001b[0;32m   6759\u001b[0m \u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m   6760\u001b[0m             \u001b[1;31m# need to rewrap column in Series to apply key function\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m   6761\u001b[0m             \u001b[1;32mif\u001b[0m \u001b[0mkey\u001b[0m \u001b[1;32mis\u001b[0m \u001b[1;32mnot\u001b[0m \u001b[1;32mNone\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n",
      "\u001b[1;32mE:\\Programs\\Anaconda\\Lib\\site-packages\\pandas\\core\\generic.py\u001b[0m in \u001b[0;36m?\u001b[1;34m(self, key, axis)\u001b[0m\n\u001b[0;32m   1774\u001b[0m             \u001b[0mvalues\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mxs\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mkey\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0maxis\u001b[0m\u001b[1;33m=\u001b[0m\u001b[0mother_axes\u001b[0m\u001b[1;33m[\u001b[0m\u001b[1;36m0\u001b[0m\u001b[1;33m]\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0m_values\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m   1775\u001b[0m         \u001b[1;32melif\u001b[0m \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0m_is_level_reference\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mkey\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0maxis\u001b[0m\u001b[1;33m=\u001b[0m\u001b[0maxis\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m   1776\u001b[0m             \u001b[0mvalues\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0maxes\u001b[0m\u001b[1;33m[\u001b[0m\u001b[0maxis\u001b[0m\u001b[1;33m]\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mget_level_values\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mkey\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0m_values\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m   1777\u001b[0m         \u001b[1;32melse\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[1;32m-> 1778\u001b[1;33m             \u001b[1;32mraise\u001b[0m \u001b[0mKeyError\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mkey\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m\u001b[0;32m   1779\u001b[0m \u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m   1780\u001b[0m         \u001b[1;31m# Check for duplicates\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m   1781\u001b[0m         \u001b[1;32mif\u001b[0m \u001b[0mvalues\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mndim\u001b[0m \u001b[1;33m>\u001b[0m \u001b[1;36m1\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n",
      "\u001b[1;31mKeyError\u001b[0m: 'Salary'"
     ]
    }
   ],
   "source": [
    "#mask = data['Gender'] == 'Male'\n",
    "#data.mask = data[mask]\n",
    "#data.mask['Salary'].mean()\n",
    "\n",
    "#mask = data['Gender'] == 'Male'\n",
    "#data.mask = data[mask]\n",
    "#data.mask['Bonus %'].mean()\n",
    "\n",
    "top5 = data.loc[:, ['Gender']].sort_values(by=['Salary'], ascending=False).head()\n",
    "top5"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 86,
   "id": "429268bc",
   "metadata": {},
   "outputs": [
    {
     "ename": "TypeError",
     "evalue": "'method' object is not iterable",
     "output_type": "error",
     "traceback": [
      "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[1;31mTypeError\u001b[0m                                 Traceback (most recent call last)",
      "Cell \u001b[1;32mIn[86], line 4\u001b[0m\n\u001b[0;32m      1\u001b[0m emp_teams \u001b[38;5;241m=\u001b[39m data[\u001b[38;5;124m'\u001b[39m\u001b[38;5;124mTeam\u001b[39m\u001b[38;5;124m'\u001b[39m]\u001b[38;5;241m.\u001b[39munique\n\u001b[0;32m      2\u001b[0m avg_salary_team \u001b[38;5;241m=\u001b[39m []\n\u001b[1;32m----> 4\u001b[0m \u001b[38;5;28;01mfor\u001b[39;00m team \u001b[38;5;129;01min\u001b[39;00m emp_teams:\n\u001b[0;32m      5\u001b[0m     mask_team \u001b[38;5;241m=\u001b[39m data[\u001b[38;5;124m'\u001b[39m\u001b[38;5;124mTeam\u001b[39m\u001b[38;5;124m'\u001b[39m] \u001b[38;5;241m==\u001b[39m team\n\u001b[0;32m      6\u001b[0m     data_mask \u001b[38;5;241m=\u001b[39m data[mask_team]\n",
      "\u001b[1;31mTypeError\u001b[0m: 'method' object is not iterable"
     ]
    }
   ],
   "source": [
    "emp_teams = data['Team'].unique\n",
    "avg_salary_team = []\n",
    "\n",
    "for team in emp_teams:\n",
    "    mask_team = data['Team'] == team\n",
    "    data_mask = data[mask_team]\n",
    "    avg_sal = round(data_mask['Salary'].mean(), 2)\n",
    "    avg_sal_team.append(avg_sal)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "dbf24e33",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Plot total number of male/female employees in senior management\n",
    "plt.barh(y = top5['Position Title'], width = top5['Employee Annual Salary'].loc[::-1])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "99a0b30d",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.11.5"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
